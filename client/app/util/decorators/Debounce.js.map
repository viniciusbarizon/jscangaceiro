{"version":3,"sources":["../../../app-src/util/decorators/Debounce.js"],"names":["debounce","miliseconds","target","key","descriptor","originalMethod","value","timer","args","event","preventDefault","clearTimeout","setTimeout","apply"],"mappings":";;;AAAO,aAASA,QAAT,CAAkBC,cAAc,GAAhC,EAAqC;AACxC,eAAO,UAASC,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkC;AACrC,kBAAMC,iBAAiBD,WAAWE,KAAlC;;AAEA,gBAAIC,QAAQ,CAAZ;AACAH,uBAAWE,KAAX,GAAmB,UAAS,GAAGE,IAAZ,EAAkB;AACjC,oBAAGC,KAAH,EAAUA,MAAMC,cAAN;;AAEVC,6BAAaJ,KAAb;;AAEA;AACAA,wBAAQK,WAAW,MAAMP,eAAeQ,KAAf,CAAqB,IAArB,EAA2BL,IAA3B,CAAjB,EAAmDP,WAAnD,CAAR;AACH,aAPD;;AASA,mBAAOG,UAAP;AACH,SAdD;AAeH;;wBAhBeJ,Q","file":"Debounce.js","sourcesContent":["export function debounce(miliseconds = 500) {\n    return function(target, key, descriptor) {\n        const originalMethod = descriptor.value;\n\n        let timer = 0;\n        descriptor.value = function(...args) {\n            if(event) event.preventDefault();\n            \n            clearTimeout(timer);\n            \n            // call originalMethod after X miliseconds.\n            timer = setTimeout(() => originalMethod.apply(this, args), miliseconds);\n        }\n\n        return descriptor;\n    }\n}"]}